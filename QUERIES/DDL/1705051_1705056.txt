CREATE TABLE AUTHOR(
		author_id INTEGER NOT NULL,
		author_name VARCHAR2(512) NOT NULL,
		author_summary VARCHAR2(3000),
		CONSTRAINT WRITER_PK PRIMARY KEY (author_id)
);

CREATE TABLE PUBLISHER(
		publisher_id INTEGER NOT NULL,
		publisher_name VARCHAR2(512) NOT NULL,
		publisher_summary VARCHAR2(3000),
		CONSTRAINT PUBLISHER_PK PRIMARY KEY (publisher_id)
);

CREATE TABLE BOOK(
		book_id INTEGER NOT NULL,
		book_name VARCHAR2(512) NOT NULL,
		book_genre VARCHAR2(512),
		book_edition VARCHAR2(512),
		author_id INTEGER NOT NULL,
		publisher_id INTEGER NOT NULL,
		price INTEGER NOT NULL,
		discount INTEGER DEFAULT 0,
		country VARCHAR2(128),
		language VARCHAR2(128),
		summary VARCHAR2(3000),
		ISBN VARCHAR2(100) DEFAULT '0',
		pages INTEGER ,
		total_sold INTEGER DEFAULT 0,
		ratings decimal(3,2) DEFAULT 0,
		no_of_ratings INTEGER DEFAULT 0,
		CONSTRAINT BOOK_PK PRIMARY KEY (book_id),
		CONSTRAINT BOOK_AUTHOR_FK FOREIGN KEY(author_id) REFERENCES AUTHOR(author_id) ON DELETE CASCADE,
		CONSTRAINT BOOK_PUBLISHER_FK FOREIGN KEY(publisher_id) REFERENCES PUBLISHER(publisher_id) ON DELETE CASCADE 
);

CREATE TABLE ADMIN(
		admin_id INTEGER NOT NULL,
		user_name VARCHAR2(128) NOT NULL UNIQUE,
		first_name VARCHAR2(128) NOT NULL,
		last_name VARCHAR2(128) NOT NULL,
		email VARCHAR2(128) NOT NULL,
		password VARCHAR2(512) NOT NULL,
		phone VARCHAR2(30) NOT NULL,
		CONSTRAINT ADMIN_PK PRIMARY KEY (admin_id)
);

CREATE TABLE CUSTOMER(
		user_id INTEGER NOT NULL,
		user_name VARCHAR2(512) NOT NULL UNIQUE,
		first_name VARCHAR2(512) NOT NULL,
		last_name VARCHAR2(512) NOT NULL,
		email VARCHAR2(128) NOT NULL,
		password VARCHAR2(512) NOT NULL,
		signup_date DATE DEFAULT SYSDATE,
		total_bought INTEGER DEFAULT 0,
		CONSTRAINT CUSTOMER_PK PRIMARY KEY (user_id)
);

CREATE TABLE ADDRESS_DETAIL(
		user_id INTEGER NOT NULL,
		address_1 VARCHAR2(512) ,
		address_2 VARCHAR2(512) ,
		city VARCHAR2(128) NOT NULL,
		country VARCHAR2(128) NOT NULL,
		phone VARCHAR2(30) NOT NULL,
		CONSTRAINT ADDRESS_DETAIL_PK PRIMARY KEY (user_id),
		CONSTRAINT ADDRESS_DETAIL_USER_FK FOREIGN KEY (user_id) REFERENCES CUSTOMER(user_id) ON DELETE CASCADE
);

CREATE TABLE CART_DETAILS(
		cart_id INTEGER NOT NULL,
		book_id INTEGER NOT NULL,
		quantity INTEGER DEFAULT 1,
		CONSTRAINT CART_DETAILS_PK PRIMARY KEY(cart_id,book_id),
		CONSTRAINT CART_DETAILS_USER_FK FOREIGN KEY(cart_id) REFERENCES CUSTOMER(user_id)
		ON DELETE CASCADE,
		CONSTRAINT CART_DETAILS_BOOK_FK FOREIGN KEY(book_id) REFERENCES BOOK(book_id)
		ON DELETE CASCADE
);

CREATE TABLE ORDER_LIST (
	order_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	admin_id INTEGER NOT NULL,
	order_date DATE DEFAULT SYSDATE,
	received_date DATE,
	order_location VARCHAR2(512) NOT NULL,
	total_price INTEGER NOT NULL,
	CONSTRAINT ORDER_LIST_PK PRIMARY KEY (order_id),
	CONSTRAINT ORDER_LIST_USER_FK FOREIGN KEY (user_id) REFERENCES CUSTOMER (user_id) ON DELETE CASCADE,
	CONSTRAINT ORDER_LIST_ADMIN_FK FOREIGN KEY (admin_id) REFERENCES ADMIN (admin_id) ON DELETE CASCADE
 
);

CREATE TABLE ORDER_DETAILS(
	order_id INTEGER NOT NULL,
	book_id INTEGER NOT NULL,
	quantity INTEGER DEFAULT 1,
	price_per_book INTEGER NOT NULL,
	CONSTRAINT ORDER_DETAILS_PK PRIMARY KEY (order_id,book_id),
	CONSTRAINT ORDER_DETAIL_ORDER_FK FOREIGN KEY (order_id) REFERENCES ORDER_LIST (order_id) ON DELETE CASCADE,
	CONSTRAINT ORDER_DETAIL_BOOK_FK FOREIGN KEY (book_id) REFERENCES BOOK (book_id) ON DELETE CASCADE
);

CREATE TABLE REVIEW(
	user_id INTEGER NOT NULL,
	book_id INTEGER NOT NULL,
	full_review VARCHAR2(3000) NOT NULL,
	ratings INTEGER NOT NULL,
	review_date DATE DEFAULT SYSDATE,
	CONSTRAINT REVIEW_PK PRIMARY KEY(user_id, book_id),
	CONSTRAINT REVIEW_USER_FK FOREIGN KEY(user_id) REFERENCES CUSTOMER(user_id) ON DELETE CASCADE,
	CONSTRAINT REVIEW_BOOK_FK FOREIGN KEY(book_id) REFERENCES BOOK(book_id) ON DELETE CASCADE
);

CREATE TABLE WISH_LIST(
	user_id INTEGER NOT NULL,
	book_id INTEGER NOT NULL,
	CONSTRAINT WISH_LIST_PK PRIMARY KEY(user_id,book_id),
	CONSTRAINT WISH_LIST_USER_FK FOREIGN KEY(user_id) REFERENCES CUSTOMER(user_id) ON DELETE CASCADE,
	CONSTRAINT WISH_LIST_BOOK_FK FOREIGN KEY(book_id) REFERENCES BOOK(book_id) ON DELETE CASCADE
);

CREATE TABLE DISCOUNT_TOKEN(
	token_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	admin_id INTEGER NOT NULL,
	creation_date DATE DEFAULT SYSDATE,
	expire_date DATE,
	no_of_use INTEGER DEFAULT 1,
	minimum_order INTEGER DEFAULT 0,
	discount_amount INTEGER NOT NULL,
	CONSTRAINT DISCOUNT_TOKEN_PK PRIMARY KEY(token_id),
	CONSTRAINT DISCOUNT_TOKEN_USER_FK FOREIGN KEY(user_id) REFERENCES CUSTOMER(user_id) ON DELETE CASCADE,
	CONSTRAINT DISCOUNT_TOKEN_ADMIN_FK FOREIGN KEY(admin_id) REFERENCES ADMIN(admin_id) ON DELETE CASCADE
);